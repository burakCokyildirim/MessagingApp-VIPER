//
//  ForgetPasswordPresenter.swift
//  Messaging App
//
//  Created by Burak Çokyıldırım on 8.03.2020.
//  Copyright (c) 2020 Softbea. All rights reserved.
//
//  Template generated by Burak Cokyildirim
//

import Foundation

class ForgetPasswordPresenter: BasePresenter {
    
    // MARK: - Dependencies
    
    fileprivate var viewController: ForgetPasswordViewControllerProtocol!
    fileprivate var interactor: ForgetPasswordInteractorProtocol!
    fileprivate var delegate: ForgetPasswordPresenterDelegateProtocol?
    
    // MARK: - Extras
    
    // MARK: - Properties
    
    var email = ""
    
    // MARK: - Initialization
    
    init(viewController: ForgetPasswordViewControllerProtocol, interactor: ForgetPasswordInteractorProtocol, delegate: ForgetPasswordPresenterDelegateProtocol?, extras: Any?) {
        self.viewController = viewController
        self.interactor = interactor
        self.delegate = delegate
        
        // Store extras
    }
    
    // MARK: - Business Logic
    
    // MARK: - Override
    
    override func handleAndShowError(errorModel: ErrorModel) {
        viewController.stopProgress()
        if handleError(errorModel: errorModel, viewController: viewController) {
            viewController.showError(errorModel: errorModel)
        }
    }
}

// MARK: - Extensions

// MARK: - Protocols Implemantations

// MARK: View Protocol

extension ForgetPasswordPresenter: ForgetPasswordPresenterViewProtocol {
    
    func sendRequest(email: String) {
        if email.isEmpty {
            viewController.showValidationError(errorMessage:
                "warning_empty_email".localized)
            return
        }
        
        if !email.isValidEmail {
            viewController.showValidationError(errorMessage:
                "warning_wrong_email".localized)
            return
        }

        self.email = email
        
        viewController.startProgress()
        interactor.sendRequest(email: email)
    }
}

// MARK: Interactor Protocol

extension ForgetPasswordPresenter: ForgetPasswordPresenterInteractorProtocol {
    
    func presentSuccess() {
        viewController.stopProgress()
        viewController.showSuccess()
    }
}

// MARK: Delegate Protocol

