//
//  SelectSendTypeViewController.swift
//  Messaging App
//
//  Created by Burak Çokyıldırım on 19.04.2020.
//  Copyright (c) 2020 Softbea. All rights reserved.
//
//  Template generated by Burak Cokyildirim
//

import UIKit

class SelectSendTypeViewController: BaseViewController {
    
    // MARK: - Outlets
    @IBOutlet weak var sendType1Button: UIButton!
    @IBOutlet weak var sendType2Button: UIButton!
    @IBOutlet weak var sendType3Button: UIButton!
    @IBOutlet weak var sendType4Button: UIButton!
    @IBOutlet weak var sendType1Label: UILabel!
    @IBOutlet weak var sendType2Label: UILabel!
    @IBOutlet weak var sendType3Label: UILabel!
    @IBOutlet weak var sendType4Label: UILabel!
    
    // MARK: - Dependencies
    
    var presenter: SendLetterPresenterViewProtocol!
    
    // MARK: - Properties
    
    var selectedSendType: SendType = .sendType1
    
    // MARK: - Lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
    }
    
    // MARK: - Configure
    
    override func configureView() {
        super.configureView()
        
        setSelection(type: selectedSendType)
        
        presenter.getArrivalTime()
    }
    
    func setSelection(type: SendType) {
        switch type {
        case .sendType1:
            sendType1Button.alpha = 0.5
            sendType1Label.alpha = 0.5
            sendType1Button.isSelected = true
            sendType2Button.alpha = 1
            sendType2Label.alpha = 1
            sendType2Button.isSelected = false
            sendType3Button.alpha = 1
            sendType3Label.alpha = 1
            sendType3Button.isSelected = false
            sendType4Button.alpha = 1
            sendType4Label.alpha = 1
            sendType4Button.isSelected = false
        case .sendType2:
            sendType1Button.alpha = 1
            sendType1Label.alpha = 1
            sendType1Button.isSelected = false
            sendType2Button.alpha = 0.5
            sendType2Label.alpha = 0.5
            sendType2Button.isSelected = true
            sendType3Button.alpha = 1
            sendType3Label.alpha = 1
            sendType3Button.isSelected = false
            sendType4Button.alpha = 1
            sendType4Label.alpha = 1
            sendType4Button.isSelected = false
        case .sendType3:
            sendType1Button.alpha = 1
            sendType1Label.alpha = 1
            sendType1Button.isSelected = false
            sendType2Button.alpha = 1
            sendType2Label.alpha = 1
            sendType2Button.isSelected = false
            sendType3Button.alpha = 0.5
            sendType3Label.alpha = 0.5
            sendType3Button.isSelected = true
            sendType4Button.alpha = 1
            sendType4Label.alpha = 1
            sendType4Button.isSelected = false
        case .sendType4:
            sendType1Button.alpha = 1
            sendType1Label.alpha = 1
            sendType1Button.isSelected = false
            sendType2Button.alpha = 1
            sendType2Label.alpha = 1
            sendType2Button.isSelected = false
            sendType3Button.alpha = 1
            sendType3Label.alpha = 1
            sendType3Button.isSelected = false
            sendType4Button.alpha = 0.5
            sendType4Label.alpha = 0.5
            sendType4Button.isSelected = true
        }
    }
    
    // MARK: - Initialization
    
    // MARK: - Actions
    
    @IBAction func sendButtonTapped(_ sender: Any) {
        presenter.sendLetter(sendType: selectedSendType)
    }
    
    @IBAction func sendTypeButtonsTapped(_ sender: UIButton) {
        switch sender {
        case sendType1Button:
            selectedSendType = .sendType1
        case sendType2Button:
            selectedSendType = .sendType2
        case sendType3Button:
            selectedSendType = .sendType3
        case sendType4Button:
            selectedSendType = .sendType4
        default:
            break
        }
        
        setSelection(type: selectedSendType)
    }
}

// MARK: - Extensions

extension UIButton {
    override open var isSelected: Bool {
        didSet{
            self.alpha = isSelected ? 1.0 : 0.6
        }
    }
}

// MARK: - Protocol Implemantations

extension SelectSendTypeViewController: SelectSendTypeViewControllerProtocol {
    
    func setArrivelTimeText(_ texts: (String, String, String, String)) {
        sendType1Label.text = texts.0
        sendType2Label.text = texts.1
        sendType3Label.text = texts.2
        sendType4Label.text = texts.3
    }
    
    func completeSendLetter() {
        showPopup(title: "success".localized, message: "message_text.successfully_sent_letter".localized) { (_) in
            self.navigationController?.popToRootViewController(animated: true)
        }
    }
}
