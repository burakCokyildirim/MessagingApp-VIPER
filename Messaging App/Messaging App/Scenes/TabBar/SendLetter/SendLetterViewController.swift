//
//  SendLetterViewController.swift
//  Messaging App
//
//  Created by Burak Çokyıldırım on 11.04.2020.
//  Copyright (c) 2020 Softbea. All rights reserved.
//
//  Template generated by Burak Cokyildirim
//

import UIKit

class SendLetterViewController: BaseViewController {
    
    // MARK: - Outlets
    @IBOutlet var collectionView: UICollectionView!
    
    // MARK: - Dependencies
    
    var presenter: SendLetterPresenterViewProtocol!
    
    // MARK: - Properties
    
    var selectedEnvelope = EnvelopeType.envelopeType1
    
    // MARK: - Lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        tabBarController?.selectedIndex = 2
        
        if presenter.sendNow {
            presenter.sendNow = false
            selectedEnvelope = .envelopeType1
            collectionView.reloadData()
            navigationController?.tabBarController?.selectedIndex = 4
        }
    }
    
    // MARK: - Configure
    
    override func configureView() {
        super.configureView()
        
        barTitle = "select_envelope".localized
        setRightNavigationBarItem(image: #imageLiteral(resourceName: "settingsButton.png"), action: #selector(showProfile))
        
        collectionView.delegate = self
        collectionView.dataSource = self
        collectionView.register(UINib(nibName: "ImageCell", bundle: nil), forCellWithReuseIdentifier: "imageCell")
        collectionView.reloadData()
    }
    
    // MARK: - Initialization
    
    // MARK: - Actions
    
    @IBAction func nextButtonTapped(_ sender: Any) {

        presenter.envelopeType = selectedEnvelope
        
        let nextController: SelectStampViewController = UIStoryboard.sendLetter.instantiateViewController()
        presenter.selectStampViewController = nextController
        nextController.presenter = presenter
        
        navigationController?.pushViewController(nextController, animated: false)
    }
    
}

// MARK: - Extensions

extension SendLetterViewController: UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout {
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        
        return 10
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "imageCell", for: indexPath) as! ImageCell
        
        cell.image.frame.size.height = collectionView.frame.width * 0.324
        cell.image.frame.size.width = collectionView.frame.width * 0.48
        cell.image.image = UIImage(named: "envelope\(indexPath.row + 1)")
        
        cell.isSelected = indexPath.row == selectedEnvelope.index
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAt section: Int) -> CGFloat {
        let threeCellHeight = collectionView.frame.width * 0.972
        if threeCellHeight > collectionView.frame.height {
            return collectionView.frame.width * 0.014
        }
        return (collectionView.frame.height - threeCellHeight) / 2
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: collectionView.frame.width * 0.48, height: collectionView.frame.width * 0.324)
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        selectedEnvelope = EnvelopeType(rawValue: indexPath.row + 1) ?? selectedEnvelope
        collectionView.reloadData()
    }
}

// MARK: - Protocol Implemantations

extension SendLetterViewController: SendLetterViewControllerProtocol {
    
}
