//
//  HomeViewController.swift
//  Messaging App
//
//  Created by Burak Çokyıldırım on 11.04.2020.
//  Copyright (c) 2020 Softbea. All rights reserved.
//
//  Template generated by Burak Cokyildirim
//

import UIKit

class HomeViewController: BaseViewController {
    
    // MARK: - Outlets
    @IBOutlet weak var collectionView: UICollectionView!
    @IBOutlet weak var pageControl: UIPageControl!
    @IBOutlet weak var lettersCountLabel: UILabel!
    @IBOutlet var collectionViewEqualWidthsWithSafeArea: NSLayoutConstraint!
    @IBOutlet weak var settingsButton: UIButton!
    
    // MARK: - Dependencies
    
    var presenter: HomePresenterViewProtocol!
    
    // MARK: - Properties
    
    var letters: [LetterModel] = []
    let dateFormatter = DateFormatter()
    
    // MARK: - Lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        navigationController?.setNavigationBarHidden(true, animated: animated)
        
        presenter.getWillComingLetters()
        
        tabBarController?.selectedIndex = 0
        #if false
        tabBarController?.selectedIndex = 1
        #endif
    }

    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        
        navigationController?.setNavigationBarHidden(false, animated: animated)
    }
    
    // MARK: - Configure
    
    override func configureView() {
        super.configureView()

        collectionView.delegate = self
        collectionView.dataSource = self
        collectionView.register(UINib(nibName: "CircleCell", bundle: nil), forCellWithReuseIdentifier: "circleCell")
        collectionView.isPagingEnabled = true
        
        dateFormatter.dateFormat = "yyyy-MM-dd HH:mm:ss"
    }
    
    func scrollViewDidScroll(_ scrollView: UIScrollView) {
        pageControl.currentPage = Int(scrollView.contentOffset.x + scrollView.frame.width/2) / Int(scrollView.frame.width)
    }
    
    func scrollViewDidEndDecelerating(_ scrollView: UIScrollView) {
        if let indexPath = collectionView.indexPathsForVisibleItems.first(where: { $0.row == pageControl.currentPage }) {
            collectionView.scrollToItem(at: indexPath, at: .centeredHorizontally, animated: true)
        }
    }
    
    // MARK: - Initialization
    
    func updateView() {
        
        self.view.layoutIfNeeded()
        
        if letters.count == 0 {
            pageControl.isHidden = true
            collectionView.isHidden = true
            collectionViewEqualWidthsWithSafeArea.isActive = false
            lettersCountLabel.text = "home.not_have_letter_to_future".localized
        } else {
            pageControl.isHidden = false
            pageControl.currentPage = 0
            pageControl.numberOfPages = letters.count
            
            collectionView.isHidden = false
            collectionViewEqualWidthsWithSafeArea.isActive = true
            
            lettersCountLabel.text = String(format: "home.have_letter_to_future".localized, letters.count)
            collectionView.reloadData()
            if let indexPath = collectionView.indexPathsForVisibleItems.last {
                collectionView.scrollToItem(at: indexPath, at: .centeredHorizontally, animated: true)
            }
        }
    }
    
    // MARK: - Actions
    
    @IBAction func settingsButtonTapped(_ sender: Any) {
        showProfile()
    }
    
    @IBAction func sendLetterButtonTapped(_ sender: Any) {
        tabBarController?.selectedIndex = 2
    }
}

// MARK: - Extensions

extension HomeViewController: UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout {
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return letters.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "circleCell", for: indexPath) as! CircleCell
        
        let deliveryTimeText = letters[indexPath.row].deliveryTime!
        guard let deliveryDate = dateFormatter.date(from: deliveryTimeText) else {
            return cell
        }
        
        let interval = deliveryDate - Date()
        guard
            let day = interval.day,
            let hour = interval.hour,
            let minute = interval.minute
            else { return cell }
        
        
        cell.configure(String(format: "%02d", day), String(format: "%02d", hour % 24), String(format: "%02d", minute % 60))
                
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: collectionView.frame.width, height: collectionView.frame.height)
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -> CGFloat {
        return 0
    }
}

// MARK: - Protocol Implemantations

extension HomeViewController: HomeViewControllerProtocol {
    
    func showWillComingLetters(letters: [LetterModel]) {
        self.letters = letters
        DispatchQueue.main.async {
            self.updateView()
        }
    }
}
