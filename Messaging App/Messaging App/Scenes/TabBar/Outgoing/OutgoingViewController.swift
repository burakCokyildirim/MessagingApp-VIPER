//
//  OutgoingViewController.swift
//  Messaging App
//
//  Created by Burak Çokyıldırım on 11.04.2020.
//  Copyright (c) 2020 Softbea. All rights reserved.
//
//  Template generated by Burak Cokyildirim
//

import UIKit

class OutgoingViewController: BaseViewController {
    
    // MARK: - Outlets
    @IBOutlet weak var profilePicture: UIImageView!
    @IBOutlet weak var username: UILabel!
    @IBOutlet weak var addressDesc: UILabel!
    @IBOutlet weak var incomingLetterCount: UILabel!
    @IBOutlet weak var outgoingLetterCount: UILabel!
    @IBOutlet weak var collectionView: UICollectionView!
    
    // MARK: - Dependencies
    
    var presenter: OutgoingPresenterViewProtocol!
    
    // MARK: - Properties
    
    var letters: [LetterModel] = []
    
    // MARK: - Lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        tabBarController?.selectedIndex = 3
        presenter.fetchLetters()
        
        if let user = MessagingAppGlobal.shared.userModel {
            if let pictureURL = user.profilePicture {
                profilePicture.setImage(url: pictureURL)
            }
            profilePicture.makeRounded()
        }
    }
    
    // MARK: - Configure
    
    override func configureView() {
        super.configureView()
        
        barTitle = "my_outgoing_letters".localized
        setRightNavigationBarItem(image: #imageLiteral(resourceName: "settingsButton.png"), action: #selector(showProfile))
        
        if let user = MessagingAppGlobal.shared.userModel {
            username.text = user.firstName + " " + user.lastName
            addressDesc.text = user.address.description
            if let pictureURL = user.profilePicture {
                profilePicture.setImage(url: pictureURL)
            }
            profilePicture.makeRounded()
        }
        
        collectionView.register(UINib(nibName: "LetterCell2", bundle: nil), forCellWithReuseIdentifier: "letterCell2")
        if let layout = collectionView.collectionViewLayout as? UICollectionViewFlowLayout {
            layout.estimatedItemSize = CGSize(width: 1, height: 1)
        }
        collectionView.reloadData()
    }
    
    // MARK: - Initialization
    
    // MARK: - Actions
    
}

// MARK: - Extensions

extension OutgoingViewController: UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout {
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return letters.count + 2
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "letterCell2", for: indexPath)
        
        if let cell = cell as? LetterCell2 {
            cell.setWidthConstraint(width: collectionView.frame.width * 0.48)
        
            if letters.count - 1 < indexPath.row {
                cell.isHidden = true
                return cell
            }
            cell.isHidden = false
            
            let letter = letters[indexPath.row]
            cell.envelopeImage.image = UIImage(named: "envelope\(letter.envelopeType.value)")
            cell.stampImage.image = UIImage(named: "stamp\(letter.stampType.value)")
            cell.username.text = letter.firstName + " " + letter.lastName
            cell.deliveryTime.text = String(letter.deliveryTime.split(separator: " ")[0])
        }
        
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        if letters.count - 1 < indexPath.row {
            return
        }
        
        let letter = letters[indexPath.row]
        let viewer = LetterViewer(letter: letter)
        LetterViewer.keyWindow?.addSubview(viewer)
    }
}

// MARK: - Protocol Implemantations

extension OutgoingViewController: OutgoingViewControllerProtocol {
    
    func showLetters(_ letters: [LetterModel], _ incomingCount: Int, _ outgoingCount: Int) {
        self.letters = letters
        self.incomingLetterCount.text = String(incomingCount)
        self.outgoingLetterCount.text = String(outgoingCount)
        self.collectionView.reloadData()
    }
}
