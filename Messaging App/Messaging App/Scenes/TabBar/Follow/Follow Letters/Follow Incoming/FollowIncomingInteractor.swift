//
//  FollowIncomingInteractor.swift
//  Messaging App
//
//  Created by Burak Çokyıldırım on 4.05.2020.
//  Copyright (c) 2020 Softbea. All rights reserved.
//
//  Template generated by Burak Cokyildirim

import Foundation

class FollowIncomingInteractor: BaseInteractor {
    
    // MARK: - Dependencies
    
    var presenter: FollowIncomingPresenterInteractorProtocol!
    
    // MARK: - Initialization
    
    override init(networkService: NetworkService? = nil, coreDataService: CoreDataService? = nil) {
        super.init(networkService: networkService, coreDataService: coreDataService)
    }
    
    // MARK: - Business Logic

}

// MARK: - Extensions

// MARK: - Protocols Implemantations

extension FollowIncomingInteractor: FollowIncomingInteractorProtocol {
    
    func fetchLetters() {
        networkService.getJSON(url: NetworkConstants.willComeLetter, success: { (json) in
            guard let statusCode = json["statusCode"].int else {
                self.presenter.handleAndShowError(errorModel: ErrorModel.default)
                return
            }
                   
            switch statusCode {
            case 0:
                let letters = json["data"]["letters"].arrayValue.map { LetterModel(json: $0)}
                self.presenter.presentLetters(letters)
                break
            default:
                self.presenter.handleAndShowError(errorModel: Errors.somethingsWrong)
            }
        }) { (errorModel) in
            self.presenter.handleAndShowError(errorModel: errorModel)
        }
    }
}
